# -*- mode: shell-script -*-

if ( $#argv == 0 ) then
    lsvirtualenv -b
    exit 1
endif

set env_name = "$1"

virtualenvwrapper_verify_workon_home || unset env_name && exit 1
(virtualenvwrapper_verify_workon_environment "$env_name" || \
    unset env_name && exit 1)

set activate = \
    "$WORKON_HOME/$env_name/$VIRTUALENVWRAPPER_ENV_BIN_DIR/activate.csh"
if ( ! -f "$activate" ) then
    echo "ERROR: Environment '$WORKON_HOME/$env_name' does not contain an activate script." > /dev/stderr
    unset env_name
    exit 1
endif

# Deactivate any current environment "destructively"
# before switching so we use our override function,
# if it exists.
if ( "`alias deactivate`" != "" ) then
    deactivate
    unalias deactivate
endif

virtualenvwrapper_run_hook "pre_activate" "$env_name"

source "$activate"

# Save the deactivate function from virtualenv under a different name
set virtualenvwrapper_original_deactivate = "`alias deactivate`"
set virtualenvwrapper_original_deactivate = \
     `echo "$virtualenvwrapper_original_deactivate" | \
      sed 's/deactivate/virtualenv_deactivate/g'`
alias virtualenv_deactivate "$virtualenvwrapper_original_deactivate"
unalias deactivate

# Replace the deactivate() function with a wrapper.
alias deactivate 'virtualenvwrapper_run_hook "pre_deactivate"; set env_postdeactivate_hook = "$VIRTUAL_ENV/$VIRTUALENVWRAPPER_ENV_BIN_DIR/postdeactivate"; set old_env = "`basename "$VIRTUAL_ENV"`"; virtualenv_deactivate \!:*; virtualenvwrapper_run_hook "post_deactivate" "$old_env"; test \( "\!:*" != "nondestructive" \) && unalias virtualenv_deactivate && unalias deactivate && unset env_postdeactivate_hook && unset old_env'

virtualenvwrapper_run_hook "post_activate"

unset virtualenvwrapper_original_deactivate
unset activate
unset env_name
exit 0

